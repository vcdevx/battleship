(()=>{"use strict";class t{constructor(t,s){this.length=t,this.sunk=!1,this.shipStatus=Array(t).fill(""),this.shipName=s}hit(t){if(t<0||t>=this.length)throw new Error("Invalid index");""===this.shipStatus[t]&&(this.shipStatus[t]="hit")}isSunk(){!0===this.shipStatus.every((t=>"hit"===t))&&(this.sunk=!0)}}let s=t=>Math.floor(Math.random()*t),e=()=>0==s(2)?"horizontal":"vertical";class i{constructor(t){this.board=[["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""],["","","","","","","","","",""]],this.ships=[],this.shipsRemaining=null,this.name=t}placeShip(i,r,h,a,l){if("vertical"===a){if(r+i>10||!0===this.checkIfNotEmpty(i,r,h,a))return this.placeShip(i,s(10),s(10),e(),l);let o=new t(i);o.shipName=l,this.ships===[]?o.id=0:o.id=this.ships.length,this.ships.push(o);for(let t=0;t<i;t++){let s={shipIndex:void 0,shipID:o.id};if(console.log(this.board),console.log(this.ships),""!==this.board[r+t][h])throw Error("ship can not be placed here vertically");s.shipIndex=t,this.board[r+t][h]=s}}if("horizontal"===a){if(h+i>10||!0===this.checkIfNotEmpty(i,r,h,a))return this.placeShip(i,s(10),s(10),e(),l);let o=new t(i);o.shipName=l,this.ships===[]?o.id=0:o.id=this.ships.length,this.ships.push(o);for(let t=0;t<i;t++){let s={shipIndex:void 0,shipID:o.id};if(console.log(this.board),console.log(this.ships),""!==this.board[r][h+t])throw Error("ship can not be placed here horizontally");s.shipIndex=t,this.board[r][h+t]=s}}}receiveAttack(t,s){""===this.board[t][s]?this.board[t][s]="miss":"miss"==this.board[t][s]&&""==this.board[t][s]||this.ships[this.board[t][s].shipID].hit(this.board[t][s].shipIndex)}checkShipStatus(){return!!this.ships.every((t=>1==t.sunk))}checkIfNotEmpty(t,s,e,i){let r=!1;if("horizontal"===i&&void 0!==s){for(let i=0;i<t+1;i++)if(""!==this.board[s][e+i]){r=!0;break}return r}if("vertical"===i){let i=!1;for(let r=0;r<t;r++)if(""!==this.board[s+r][e]){i=!0;break}return i}}checkIfLost(){return this.ships.every((t=>1==t.sunk))}}class r{constructor(t){this.name=t,this.turn=!0}getName(){return this.name}setName(t){this.name=t}endTurn(t){1==this.turn&&(this.turn=!1,t.startTurn())}startTurn(){0==this.turn&&(this.turn=!0)}checkTurn(){return this.turn}attack(t,s,e,i){this.checkTurn()&&(i.receiveAttack(t,s),this.endTurn(e))}}const h=new r("player"),a=(new r("ai"),new i("player")),l=new i("ai"),o=t=>{let s=document.querySelector(".playerBoardContainer"),e=document.querySelector(".aiBoardContainer");for(let i=0;i<t.board.length;i++)for(let r=0;r<t.board[i].length;r++){let h=document.createElement("div");h.classList.add("cell"),h.setAttribute("data-row",i),h.setAttribute("data-col",r),"player"==t.name?h.classList.add("playerCell"):"ai"==t.name&&h.classList.add("aiCell"),""!=t.board[i][r]&&"miss"!=t.board[i][r]&&("hit"===t.ships[t.board[i][r].shipID].shipStatus[t.board[i][r].shipIndex]&&h.classList.add("hitCell"),0==t.ships[t.board[i][r].shipID].sunk?h.classList.add("shipCell"):1==t.ships[t.board[i][r].shipID].sunk&&h.classList.add("sunkCell")),"miss"===t.board[i][r]&&h.classList.add("missCell"),"player"==t.name?s.append(h):"ai"==t.name&&e.append(h)}};let n=t=>{let i=["Carrier","Battleship","Cruiser","Submarine","Destroyer"],r=[5,4,3,3,2];for(let h=0;h<5;h++)t.placeShip(r[h],s(10),s(10),e(),i[h])};console.log("hi2"),n(a),console.log(a.board),console.log(a.ships),n(l),console.log(l.board),console.log(l.ships),o(a),o(l),h.startTurn(),((t,s,e)=>{if(1==s.turn){let s=document.querySelectorAll(".aiCell");document.querySelector(".shipCell"),document.querySelector(".hitCell"),document.querySelector(".missCell"),s.forEach((e=>{e.addEventListener("click",(e=>{if(e.target.classList.contains("shipCell")){let i=e.target.getAttribute("data-row"),r=e.target.getAttribute("data-col");console.log("attack"),t.receiveAttack(i,r),s.forEach((t=>{t.removeEventListener()}))}}))}))}})(l,h)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,